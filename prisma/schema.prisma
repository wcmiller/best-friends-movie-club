// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int        @id @default(autoincrement())
  name     String     @db.TinyText
  email    String     @db.Char(36)
  salt     String     @db.Char(32)
  hash     String     @db.Char(128)
  order    Int        @db.UnsignedTinyInt
  week     Week[]
  vote     Vote[]
  Absentee Absentee[]
}

model Vote {
  id     Int  @id @default(autoincrement())
  userId Int  @db.UnsignedSmallInt
  pickId Int  @db.UnsignedSmallInt
  weekId Int  @default(0) @db.UnsignedSmallInt
  user   User @relation(fields: [userId], references: [id])
  pick   Pick @relation(fields: [pickId], references: [id])

  @@index(userId)
  @@index(pickId)
}

model Week {
  id        Int        @id @default(autoincrement())
  number    Int        @db.UnsignedSmallInt
  date      DateTime   @db.Date
  note      String     @default("") @db.TinyText
  status    Status     @default(PENDING)
  pickerId  Int        @db.UnsignedTinyInt
  picker    User       @relation(fields: [pickerId], references: [id])
  movies    Pick[]
  winnerId  Int        @default(0) @db.UnsignedSmallInt
  messageId String     @default("") @db.TinyText
  absentees Absentee[]
}

model Pick {
  id      Int     @id @default(autoincrement())
  movieId String  @db.Char(16)
  weekId  Int     @db.UnsignedSmallInt
  service Service
  link    String  @default("") @db.TinyText
  week    Week    @relation(fields: [weekId], references: [id])
  movie   Movie   @relation(fields: [movieId], references: [imdb])
  vote    Vote[]
}

model Absentee {
  id     Int  @id @default(autoincrement())
  userId Int  @db.UnsignedTinyInt
  weekId Int  @db.UnsignedSmallInt
  week   Week @relation(fields: [weekId], references: [id])
  user   User @relation(fields: [userId], references: [id])
}

model Movie {
  id         Int    @id @default(autoincrement())
  imdb       String @unique @db.Char(16)
  title      String @db.TinyText
  runtime    Int    @db.UnsignedTinyInt
  year       Int    @db.Year
  directors  Json   @db.Json
  cast       Json   @db.Json
  genres     Json   @db.Json
  summary    String @db.MediumText
  poster     String @db.TinyText
  trailer    String @db.Char(40)
  imdbRating Float  @db.Double
  mpaaRating String @db.Char(6)
  weeks      Pick[]
}

enum Status {
  PENDING
  CHOOSING
  VOTING
  COMPLETE
}

enum Service {
  AMAZON
  HBO
  NETFLIX
}
